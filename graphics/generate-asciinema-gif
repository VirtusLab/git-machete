#!/usr/bin/env bash

set -e -o pipefail -u

function spoonfeed() {
  init_delay=$1
  sleep $init_delay

  text=$2
  comp=
  buffer=
  for (( i=0; i<${#text}; i++ )); do
    char=${text:$i:1}
    if [[ $char == '^' ]]; then
      sleep 0.5
      continue
    elif [[ $char == '~' ]]; then
      comp=true
      char=
    elif [[ $char == ' ' || $char == '=' ]]; then
      comp=
    fi
    buffer="${buffer}${char}"
    if ! [[ $comp ]]; then
      echo -n "$buffer"
      buffer=
      sleep 0.15
    fi
  done
  echo "$buffer"
}

function script() {
  spoonfeed 2 'git ma~chete dis~cover --ch~ecked-out-since="2 weeks ago"'
  spoonfeed 5 'y^'
  spoonfeed 1 '~clear'

  spoonfeed 1 'git ma~chete st~atus --l~ist-commits'
  spoonfeed 5 '~clear'

  spoonfeed 1 'git chec~kout d~evelop'
  spoonfeed 1 'git ma~chete tr~averse'
  spoonfeed 4 'y^'
  spoonfeed 4 'yq^'
  spoonfeed 3 '~clear'

  spoonfeed 1 'git ma~chete st~atus --l~ist-commits'
  spoonfeed 5 '~clear'

  spoonfeed 1 'git ma~chete tr~averse'
  spoonfeed 4 'y^'
  spoonfeed 2 'yq^'
  spoonfeed 5 '~clear'
  spoonfeed 1 '~exit'
}

gif_path=${1-/tmp/$(date +%s).gif}
gif_path=$(realpath "$gif_path")
cast_path=${gif_path/.gif/.cast}

self_dir=$(cd "$(dirname "$0")" &>/dev/null; pwd -P)
sandbox_dir=$(mktemp -d)
"$self_dir/setup-sandbox" "$sandbox_dir"
cd "$sandbox_dir"/machete-sandbox

script | asciinema rec --command="bash --init-file '$self_dir/bash-init-file'" "$cast_path"

theme=000000,ffffff,000000,ff0000,00ff00,ffff00,00ffff,ff00ff,00ffff,d9d9d9,4d4d4d,ff0000,00ff00,ffff00,00ffff,ff00ff,00ffff,ffffff
# `head -n ...` to remove the 3 final lines responsible for the terminating `exit`
# `--cols 122 --rows 35` to fit the text on the screen without breaking the lines
agg --speed 0.75 --cols 122 --rows 35 --font-size 12 --theme "$theme" <(head -n $(( $(wc -l < "$cast_path") - 2 )) "$cast_path") "$gif_path"
echo "Location of the generated GIF file:"
echo "$gif_path"
