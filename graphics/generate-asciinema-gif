#!/usr/bin/env bash

set -e -o pipefail -u

timestamp=$(date +%s)
cast=/tmp/${timestamp}.cast
gif=/tmp/${timestamp}.gif

function spoonfeed() {
  init_delay=$1
  sleep $init_delay

  text=$2
  comp=
  buffer=
  for (( i=0; i<${#text}; i++ )); do
    char=${text:$i:1}
    if [[ $char == '^' ]]; then
      sleep 0.5
      continue
    elif [[ $char == '~' ]]; then
      comp=true
      char=
    elif [[ $char == ' ' || $char == '=' ]]; then
      comp=
    fi
    buffer="${buffer}${char}"
    if ! [[ $comp ]]; then
      echo -n "$buffer"
      buffer=
      sleep 0.15
    fi
  done
  echo "$buffer"
}

function script() {
  spoonfeed 2 'git ma~chete dis~cover --ch~ecked-out-since="2 weeks ago"'
  spoonfeed 5 'y^'
  spoonfeed 1 '~clear'

  spoonfeed 1 'git ma~chete st~atus --l~ist-commits'
  spoonfeed 5 '~clear'

  spoonfeed 1 'git chec~kout d~evelop'
  spoonfeed 1 'git ma~chete tr~averse'
  spoonfeed 4 'y^'
  spoonfeed 4 'yq^'
  spoonfeed 3 '~clear'

  spoonfeed 1 'git ma~chete st~atus --l~ist-commits'
  spoonfeed 5 '~clear'

  spoonfeed 1 'git ma~chete tr~averse'
  spoonfeed 4 'y^'
  spoonfeed 2 'yq^'
  spoonfeed 5 '~clear'
  spoonfeed 1 '~exit'
}

init_contents='set -e -o pipefail -u; PS1=\(\\\$\(date\ +%H:%M:%S\)\)\ \$\ ; export GIT_MACHETE_DIM_AS_GRAY=true; export GIT_SEQUENCE_EDITOR=:'
nested_command="bash --init-file <(echo '$init_contents')"
script | asciinema rec --command="bash -c \"$nested_command\"" "$cast"
# `head -n ...` to remove the 3 final lines responsible for the terminating `exit`
# `--cols 122 --rows 35` to fit the text on the screen without breaking the lines
# TODO (#691): Replace `asciicast2gif` (it is no longer being maintained) with `agg` in `graphics/generate-asciinema-gif`.
#agg --speed 0.75 --cols 122 --rows 35 --font-size 12 --theme asciinema <(head -n $(( $(wc -l < "$cast") - 2 )) "$cast") "$gif"
asciicast2gif -s 0.75 -S 1 -w 122 -h 35 <(head -n $(( $(wc -l < "$cast") - 2 )) "$cast") "$gif"
echo "Location of the generated GIF file: $gif"
